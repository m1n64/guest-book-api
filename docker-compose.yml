# For more information: https://laravel.com/docs/sail
version: '3.8'
services:
    laravel.test:
        build:
            context: ./docker/php
            dockerfile: Dockerfile
            target: base
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        container_name: app-guest-book
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            # - '${APP_PORT:-80}:8000'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
            - '${REVERB_PORT-8080}:8080'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: 'none'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            DB_CONNECTION: 'mysql'
            DB_HOST: db
            DB_PORT: 3306
            DB_USERNAME: ${DB_USERNAME}
            DB_PASSWORD: ${DB_PASSWORD}
            REDIS_HOST: redis
        volumes:
            - ./:/var/www/html
        depends_on:
            - db
            - redis
            - mailhog
        networks:
            - guest_book_network

    nginx:
        image: nginx:latest
        container_name: nginx-guest-book
        volumes:
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "${APP_PORT:-80}:80"
        depends_on:
            - laravel.test
        networks:
            - guest_book_network

    db:
        image: mysql:8
        container_name: db-guest-book
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./db:/var/lib/mysql/
        ports:
            - "3306:3306"
        networks:
            - guest_book_network

#    db:
#        image: postgres:15
#        container_name: db-guest-book
#        restart: unless-stopped
#        environment:
#            POSTGRES_DB: ${DB_DATABASE}
#            POSTGRES_USER: ${DB_USERNAME}
#            POSTGRES_PASSWORD: ${DB_PASSWORD}
#        volumes:
#            - db-data:/var/lib/postgresql/data
#        ports:
#            - "5432:5432"
#        networks:
#            - guest_book_network

    redis:
        image: redis:alpine
        container_name: redis-guest-book
        volumes:
            - ./redis:/data
        ports:
            - "6379:6379"
        networks:
            - guest_book_network

    centrifugo:
        image: centrifugo/centrifugo:latest
        container_name: centrifugo-guest-book
        ports:
            - "9000:8000"
        volumes:
            - ./docker/centrifugo:/centrifugo
        command: centrifugo -c /centrifugo/config.json
        networks:
            - guest_book_network

    mailhog:
        image: 'mailhog/mailhog:latest'
        container_name: mailhog-guest-book
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - guest_book_network

    adminer:
        image: adminer
        container_name: adminer-guest-book
        restart: always
        networks:
            - guest_book_network

volumes:
    db-data:

networks:
    guest_book_network:
        driver: bridge
